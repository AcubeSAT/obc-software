SET(CMAKE_SYSTEM_NAME Generic)
SET(CMAKE_SYSTEM_VERSION 1)
cmake_minimum_required(VERSION 3.19.2)

# project settings
project( TEST_INTEGRATION C CXX ASM)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

# specify cross compilers and tools
SET(CMAKE_C_COMPILER_WORKS 1)
SET(CMAKE_C_COMPILER arm-none-eabi-gcc)
SET(CMAKE_CXX_COMPILER_WORKS 1)
SET(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER  arm-none-eabi-gcc)
set(CMAKE_AR arm-none-eabi-ar)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_OBJDUMP arm-none-eabi-objdump)
set(SIZE arm-none-eabi-size)

set(LINKER_SCRIPT ${CMAKE_SOURCE_DIR}/src/config/default/ATSAMV71Q21B.ld)

SET(FPU_FLAGS "-mfloat-abi=hard -mfpu=fpv4-sp-d16")
add_definitions(-DARM_MATH_CM7 -DARM_MATH_MATRIX_CHECK -DARM_MATH_ROUNDING -D__FPU_PRESENT=1)

SET(COMMON_FLAGS
        "-mcpu=cortex-m7 ${FPU_FLAGS} -mthumb -mthumb-interwork -ffunction-sections -fdata-sections \
    -g -fno-common -fmessage-length=0 -specs=nosys.specs -specs=nano.specs")

SET(CMAKE_CXX_FLAGS_INIT "${COMMON_FLAGS} -std=c++11")
SET(CMAKE_C_FLAGS_INIT "${COMMON_FLAGS} -std=gnu99")
SET(CMAKE_EXE_LINKER_FLAGS_INIT "-Wl,-gc-sections,--print-memory-usage -T ${LINKER_SCRIPT}")

add_compile_options(-Wl,-gc-sections,--print-memory-usage -T ${LINKER_SCRIPT} -mcpu=cortex-m7 -mthumb -mthumb-interwork -ffunction-sections -fdata-sections -g -fno-common -fmessage-length=0 -specs=nosys.specs -specs=nano.specs -mfloat-abi=hard -mfpu=fpv4-sp-d16)
add_link_options(-Wl,-gc-sections,--print-memory-usage -T ${LINKER_SCRIPT} -mcpu=cortex-m7 -mthumb -mthumb-interwork -ffunction-sections -fdata-sections -g -fno-common -fmessage-length=0 -specs=nosys.specs -specs=nano.specs -mfloat-abi=hard -mfpu=fpv4-sp-d16)


include_directories(.)
include_directories(src)
include_directories(src/config)
include_directories(src/config/default)
include_directories(src/config/default/osal)
include_directories(src/config/default/peripheral/clk)
include_directories(src/config/default/peripheral/efc)
include_directories(src/config/default/peripheral/nvic)
include_directories(src/config/default/peripheral/pio)
include_directories(src/config/default/peripheral/systick)
include_directories(src/config/default/system)
include_directories(src/config/default/system/cache)
include_directories(src/config/default/system/debug)
include_directories(src/config/default/system/int)
include_directories(src/config/default/system/time)
include_directories(src/config/default/system/time/src)
include_directories(src/FreeRTOS)
include_directories(src/FreeRTOS/Source)
include_directories(src/FreeRTOS/Source/include)
include_directories(src/FreeRTOS/Source/portable)
include_directories(src/FreeRTOS/Source/portable/GCC)
include_directories(src/FreeRTOS/Source/portable/GCC/SAM)
include_directories(src/FreeRTOS/Source/portable/GCC/SAM/CM7)
include_directories(src/FreeRTOS/Source/portable/MemMang)
include_directories(src/packs)
include_directories(src/packs/ATSAMV71Q21B_DFP)
include_directories(src/packs/ATSAMV71Q21B_DFP/component)
include_directories(src/packs/ATSAMV71Q21B_DFP/instance)
include_directories(src/packs/ATSAMV71Q21B_DFP/pio)
include_directories(src/packs/CMSIS)
include_directories(src/packs/CMSIS/CMSIS)
include_directories(src/packs/CMSIS/CMSIS/Core)
include_directories(src/packs/CMSIS/CMSIS/Core/Include)
include_directories(AutoGenerated.X)
include_directories(AutoGenerated.X/dist)
include_directories(AutoGenerated.X/dist/default)
include_directories(AutoGenerated.X/dist/default/production)
include_directories(AutoGenerated.X/nbproject)
include_directories(AutoGenerated.X/nbproject/private)
include_directories(/opt/microchip/mplabx/v5.45/packs/arm/CMSIS/5.4.0/CMSIS/Core/Include/)

file(GLOB_RECURSE SOURCES "src/*.c" "AutoGenerated.X/*.c")
add_executable(${PROJECT_NAME}.elf ${SOURCES} ${LINKER_SCRIPT})


set(CMAKE_EXE_LINKER_FLAGS
        "${CMAKE_EXE_LINKER_FLAGS} -Wl,-Map=${PROJECT_BINARY_DIR}/${PROJECT_NAME}.map")







